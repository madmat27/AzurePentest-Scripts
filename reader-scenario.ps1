$starttime = Get-Date
Write-Host -ForegroundColor Green "Deployment Started $starttime"

## Δημιουργία χρήστη "reader"
$upnsuffix=$(az ad signed-in-user show --query userPrincipalName --output tsv | sed 's/.*@//')
$password = Read-Host "Please enter a password"
$securepassword = ConvertTo-SecureString -String $password -AsPlainText -Force
$user = "reader@$upnsuffix"
$displayname=$(echo $user | sed 's/@.*//')
Write-Host -ForegroundColor Green "###########################################################################"
Write-Host -ForegroundColor Green "# Creating new admin user $user in Azure AD #"
Write-Host -ForegroundColor Green "###########################################################################"
New-AzADUser -DisplayName $displayname -UserPrincipalName $user -Password $securepassword -MailNickname $displayname

## Ανάθεση ρόλου "Reader" στο νέο χρήστη στο Azure subscription
$subid=$(az account show --query id --output tsv)
Write-Host -ForegroundColor Green "####################################################################"
Write-Host -ForegroundColor Green "# Assigning the Reader role to $user #"
Write-Host -ForegroundColor Green "####################################################################"
az role assignment create --role "Reader" --assignee $user --subscription $subid

## Ανάθεση μεταβλητών κι εκχώρηση resource group
$random = Get-Random -Maximum 100000 -Minimum 10000
$customappname = "customapp"
$containerappname = "containerapp"
$acrname="acr$random"
$group = "pentesting-vm-resgr"
$location = "uksouth"
az group create --name $group --location $location

## Εκχώρηση του subscription id στη μεταβλητή $subid
$subid=$(az account show --query id --output tsv)

## δημιουργία υπηρεσιών (service principals) με δικαιώματα contributor
$customapp=$(az ad sp create-for-rbac -n $customappname --role Contributor --scopes /subscriptions/$subid)
$containerapp=$(az ad sp create-for-rbac -n $containerappname --role Contributor --scopes /subscriptions/$subid)

## Δημιουργία μεταβλητών που περιέχουν τα ids του customapp, του containerapp, του containerapp secret, του tenant και του user
$customappid=$(az ad app list --display-name $customappname --query [].appId -o tsv)
$containerappid=$(echo $containerapp | jq -r .appId)
$containerappsecret=$(echo $containerapp | jq -r .password)
$tenantid=$(echo $containerapp | jq -r .tenant)
$userid=$(az ad user show --id $user | jq -r .id)  

## Λήψη του αρχείου Docker που θα χρησιμοποιήσουμε για το container
Invoke-WebRequest -Uri https://raw.githubusercontent.com/madmat27/AzurePentest-Scripts/main/Dockerfile -OutFile Dockerfile

## Εκχωρούμε στο Docker file τις μεταβλητές που δημιουργήσαμε σε προηγούμενο βήμα του script
sed -i "s/containerappid/$containerappid/" Dockerfile
sed -i "s/containerappsecret/$containerappsecret/" Dockerfile
sed -i "s/tenantid/$tenantid/" Dockerfile

## Δημιουργία του container registry και του container image
az acr create --resource-group $group --location $location --name $acrname --sku Standard

az acr build --resource-group $group --registry $acrname --image nodeapp-web:v1 .

## Εκχωρούμε τον χρήστη reader ως κάτοχο της εφαρμογής
az ad app owner add --id $customappid --owner-object-id $userid

# Εκκινούμε ένα ARM json πρότυπο, που με τη σειρά του, δημιουργεί το Ubuntu VM με τους αντίστοιχους δικτυακούς και λοιπούς πόρους
az deployment group create --name TemplateDeployment --resource-group $group --template-uri "https://raw.githubusercontent.com/madmat27/AzurePentest-Scripts/main/badtemplate.json"

az vm identity assign -g $group -n LinuxVM --role Contributor --scope /subscriptions/$subid

## Εκτυπώνουμε την έξοδο του script
Start-Transcript -Path reader-account-output.txt
Write-Host -ForegroundColor Green "#################"
Write-Host -ForegroundColor Green "# Script Output #"
Write-Host -ForegroundColor Green "#################"
Write-Host -ForegroundColor Green "Azure Reader User:" $user
Write-Host -ForegroundColor Green "Azure Reader User Password:" $password
Write-Host -ForegroundColor Green " "
Stop-Transcript
$endtime = Get-Date
Write-Host -ForegroundColor Green "Deployment Ended $endtime"